{
  "version": 3,
  "sources": ["../node_modules/localforage/dist/localforage.js", "../node_modules/dot-prop/index.js", "../src/Game.ts", "../src/Utilities/Render.ts", "../src/HTML/Popups.ts", "../src/Utilities/Format.ts", "../src/Main/Currency/Currency.ts", "../src/Main/Currency/Variants/Coin.ts", "../src/Main/Currency/Variants/ProgressFragment.ts", "../src/Utilities/UpdateHTML.ts", "../src/Main/ProgressBar/Properties.ts", "../src/Main/Upgrades/Upgrades.ts", "../src/Main/Upgrades/Variants/Coin.ts", "../src/Main/Transformations/CoinUpgrades/BarSpeed.ts", "../src/Main/Transformations/CoinUpgrades/BarMomentum.ts", "../src/Main/Transformations/CoinUpgrades/BarReverberation.ts", "../src/Main/Transformations/CoinUpgrades/BarVibration.ts", "../src/Main/Transformations/CoinUpgrades/BarAgitation.ts", "../src/Main/Transformations/CoinUpgrades/BarAdoption.ts", "../src/Main/Transformations/CoinUpgrades/BarEmpowerment.ts", "../src/Main/Transformations/CoinUpgrades/BarReinforcement.ts", "../src/Main/Transformations/CoinUpgrades/BarResonance.ts", "../src/Utilities/HelperFunctions.ts", "../src/Main/Reset/Refresh.ts", "../src/Main/Upgrades/Variants/Talents.ts", "../src/Main/Transformations/Talents/BarCriticalChance.ts", "../src/Main/Transformations/Talents/BarSpeed.ts", "../src/Main/Transformations/Talents/CoinGain.ts", "../src/Utilities/Eventlisteners.ts", "../src/Events/Load.ts", "../src/Events/VisisbilityChange.ts"],
  "sourcesContent": ["/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n", "const isObject = value => {\n\tconst type = typeof value;\n\treturn value !== null && (type === 'object' || type === 'function');\n};\n\nconst disallowedKeys = new Set([\n\t'__proto__',\n\t'prototype',\n\t'constructor',\n]);\n\nconst digits = new Set('0123456789');\n\nfunction getPathSegments(path) {\n\tconst parts = [];\n\tlet currentSegment = '';\n\tlet currentPart = 'start';\n\tlet isIgnoring = false;\n\n\tfor (const character of path) {\n\t\tswitch (character) {\n\t\t\tcase '\\\\':\n\t\t\t\tif (currentPart === 'index') {\n\t\t\t\t\tthrow new Error('Invalid character in an index');\n\t\t\t\t}\n\n\t\t\t\tif (currentPart === 'indexEnd') {\n\t\t\t\t\tthrow new Error('Invalid character after an index');\n\t\t\t\t}\n\n\t\t\t\tif (isIgnoring) {\n\t\t\t\t\tcurrentSegment += character;\n\t\t\t\t}\n\n\t\t\t\tcurrentPart = 'property';\n\t\t\t\tisIgnoring = !isIgnoring;\n\t\t\t\tbreak;\n\n\t\t\tcase '.':\n\t\t\t\tif (currentPart === 'index') {\n\t\t\t\t\tthrow new Error('Invalid character in an index');\n\t\t\t\t}\n\n\t\t\t\tif (currentPart === 'indexEnd') {\n\t\t\t\t\tcurrentPart = 'property';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (isIgnoring) {\n\t\t\t\t\tisIgnoring = false;\n\t\t\t\t\tcurrentSegment += character;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (disallowedKeys.has(currentSegment)) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\tparts.push(currentSegment);\n\t\t\t\tcurrentSegment = '';\n\t\t\t\tcurrentPart = 'property';\n\t\t\t\tbreak;\n\n\t\t\tcase '[':\n\t\t\t\tif (currentPart === 'index') {\n\t\t\t\t\tthrow new Error('Invalid character in an index');\n\t\t\t\t}\n\n\t\t\t\tif (currentPart === 'indexEnd') {\n\t\t\t\t\tcurrentPart = 'index';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (isIgnoring) {\n\t\t\t\t\tisIgnoring = false;\n\t\t\t\t\tcurrentSegment += character;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (currentPart === 'property') {\n\t\t\t\t\tif (disallowedKeys.has(currentSegment)) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\n\t\t\t\t\tparts.push(currentSegment);\n\t\t\t\t\tcurrentSegment = '';\n\t\t\t\t}\n\n\t\t\t\tcurrentPart = 'index';\n\t\t\t\tbreak;\n\n\t\t\tcase ']':\n\t\t\t\tif (currentPart === 'index') {\n\t\t\t\t\tparts.push(Number.parseInt(currentSegment, 10));\n\t\t\t\t\tcurrentSegment = '';\n\t\t\t\t\tcurrentPart = 'indexEnd';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (currentPart === 'indexEnd') {\n\t\t\t\t\tthrow new Error('Invalid character after an index');\n\t\t\t\t}\n\n\t\t\t\t// Falls through\n\n\t\t\tdefault:\n\t\t\t\tif (currentPart === 'index' && !digits.has(character)) {\n\t\t\t\t\tthrow new Error('Invalid character in an index');\n\t\t\t\t}\n\n\t\t\t\tif (currentPart === 'indexEnd') {\n\t\t\t\t\tthrow new Error('Invalid character after an index');\n\t\t\t\t}\n\n\t\t\t\tif (currentPart === 'start') {\n\t\t\t\t\tcurrentPart = 'property';\n\t\t\t\t}\n\n\t\t\t\tif (isIgnoring) {\n\t\t\t\t\tisIgnoring = false;\n\t\t\t\t\tcurrentSegment += '\\\\';\n\t\t\t\t}\n\n\t\t\t\tcurrentSegment += character;\n\t\t}\n\t}\n\n\tif (isIgnoring) {\n\t\tcurrentSegment += '\\\\';\n\t}\n\n\tswitch (currentPart) {\n\t\tcase 'property': {\n\t\t\tif (disallowedKeys.has(currentSegment)) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tparts.push(currentSegment);\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase 'index': {\n\t\t\tthrow new Error('Index was not closed');\n\t\t}\n\n\t\tcase 'start': {\n\t\t\tparts.push('');\n\n\t\t\tbreak;\n\t\t}\n\t// No default\n\t}\n\n\treturn parts;\n}\n\nfunction isStringIndex(object, key) {\n\tif (typeof key !== 'number' && Array.isArray(object)) {\n\t\tconst index = Number.parseInt(key, 10);\n\t\treturn Number.isInteger(index) && object[index] === object[key];\n\t}\n\n\treturn false;\n}\n\nfunction assertNotStringIndex(object, key) {\n\tif (isStringIndex(object, key)) {\n\t\tthrow new Error('Cannot use string index');\n\t}\n}\n\nexport function getProperty(object, path, value) {\n\tif (!isObject(object) || typeof path !== 'string') {\n\t\treturn value === undefined ? object : value;\n\t}\n\n\tconst pathArray = getPathSegments(path);\n\tif (pathArray.length === 0) {\n\t\treturn value;\n\t}\n\n\tfor (let index = 0; index < pathArray.length; index++) {\n\t\tconst key = pathArray[index];\n\n\t\tif (isStringIndex(object, key)) {\n\t\t\tobject = index === pathArray.length - 1 ? undefined : null;\n\t\t} else {\n\t\t\tobject = object[key];\n\t\t}\n\n\t\tif (object === undefined || object === null) {\n\t\t\t// `object` is either `undefined` or `null` so we want to stop the loop, and\n\t\t\t// if this is not the last bit of the path, and\n\t\t\t// if it didn't return `undefined`\n\t\t\t// it would return `null` if `object` is `null`\n\t\t\t// but we want `get({foo: null}, 'foo.bar')` to equal `undefined`, or the supplied value, not `null`\n\t\t\tif (index !== pathArray.length - 1) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn object === undefined ? value : object;\n}\n\nexport function setProperty(object, path, value) {\n\tif (!isObject(object) || typeof path !== 'string') {\n\t\treturn object;\n\t}\n\n\tconst root = object;\n\tconst pathArray = getPathSegments(path);\n\n\tfor (let index = 0; index < pathArray.length; index++) {\n\t\tconst key = pathArray[index];\n\n\t\tassertNotStringIndex(object, key);\n\n\t\tif (index === pathArray.length - 1) {\n\t\t\tobject[key] = value;\n\t\t} else if (!isObject(object[key])) {\n\t\t\tobject[key] = typeof pathArray[index + 1] === 'number' ? [] : {};\n\t\t}\n\n\t\tobject = object[key];\n\t}\n\n\treturn root;\n}\n\nexport function deleteProperty(object, path) {\n\tif (!isObject(object) || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\tconst pathArray = getPathSegments(path);\n\n\tfor (let index = 0; index < pathArray.length; index++) {\n\t\tconst key = pathArray[index];\n\n\t\tassertNotStringIndex(object, key);\n\n\t\tif (index === pathArray.length - 1) {\n\t\t\tdelete object[key];\n\t\t\treturn true;\n\t\t}\n\n\t\tobject = object[key];\n\n\t\tif (!isObject(object)) {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\nexport function hasProperty(object, path) {\n\tif (!isObject(object) || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\tconst pathArray = getPathSegments(path);\n\tif (pathArray.length === 0) {\n\t\treturn false;\n\t}\n\n\tfor (const key of pathArray) {\n\t\tif (!isObject(object) || !(key in object) || isStringIndex(object, key)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tobject = object[key];\n\t}\n\n\treturn true;\n}\n\nexport function escapePath(path) {\n\tif (typeof path !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn path.replace(/[\\\\.[]/g, '\\\\$&');\n}\n\n// The keys returned by Object.entries() for arrays are strings\nfunction entries(value) {\n\tif (Array.isArray(value)) {\n\t\treturn value.map((value, index) => [index, value]);\n\t}\n\n\treturn Object.entries(value);\n}\n\nfunction stringifyPath(pathSegments) {\n\tlet result = '';\n\n\tfor (let [index, segment] of entries(pathSegments)) {\n\t\tif (typeof segment === 'number') {\n\t\t\tresult += `[${segment}]`;\n\t\t} else {\n\t\t\tsegment = escapePath(segment);\n\t\t\tresult += index === 0 ? segment : `.${segment}`;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction * deepKeysIterator(object, currentPath = []) {\n\tif (!isObject(object)) {\n\t\tif (currentPath.length > 0) {\n\t\t\tyield stringifyPath(currentPath);\n\t\t}\n\n\t\treturn;\n\t}\n\n\tfor (const [key, value] of entries(object)) {\n\t\tyield * deepKeysIterator(value, [...currentPath, key]);\n\t}\n}\n\nexport function deepKeys(object) {\n\treturn [...deepKeysIterator(object)];\n}\n", "import { setProperty } from 'dot-prop';\nimport localforage from 'localforage';\nimport { Alert, Confirm } from './HTML/Popups';\nimport { Coins } from './Main/Currency/Variants/Coin';\nimport { ProgressFragment } from './Main/Currency/Variants/ProgressFragment';\nimport {\n    backgroundColorCreation,\n    computeMainBarTNL,\n    getBarWidth,\n    incrementMainBarEXP,\n    levelUpBar,\n    updateDPS,\n    updateMainBar,\n    updateMainBarInformation\n} from './Main/ProgressBar/Properties';\nimport * as Transform from './Main/Transformations/index';\nimport { Player } from './types/player';\nimport { format } from './Utilities/Format';\nimport { updateElementById, updateStyleById } from './Utilities/Render';\nimport { hideStuff } from './Utilities/UpdateHTML';\n\n/**\n * This is the player variable, which is used throughout the game!\n */\nexport const player = {\n    firstPlayed: new Date(),\n    barEXP: 0,\n    barTNL: 0,\n    totalEXP: 0,\n    barLevel: 0,\n    highestBarLevel: 0,\n    refreshCount: 0,\n    refreshTime: 0,\n    criticalHits: 0,\n    criticalHitsThisRefresh: 0,\n    coinValueCache: 0\n} as Player; // downcast on purpose\n\n/**\n * A newly initiable save for later.\n */\nexport const blankSave = Object.assign({}, player);\n\n/**\n * Saves your savefile to localstorage.\n */\nexport const saveGame = async (player: Player) => {\n\n    const saveObject = {\n        ...player,\n        coins: player.coins.valueOf(),\n        coinUpgrades: {\n            barSpeed: player.coinUpgrades.barSpeed.valueOf(),\n            barMomentum: player.coinUpgrades.barMomentum.valueOf(),\n            barReverberation: player.coinUpgrades.barReverberation.valueOf(),\n            barVibration: player.coinUpgrades.barVibration.valueOf(),\n            barAgitation: player.coinUpgrades.barAgitation.valueOf(),\n            barAdoption: player.coinUpgrades.barAdoption.valueOf(),\n            barEmpowerment: player.coinUpgrades.barEmpowerment.valueOf(),\n            barReinforcement: player.coinUpgrades.barReinforcement.valueOf(),\n            barResonance: player.coinUpgrades.barResonance.valueOf()\n        },\n        talents: {\n            barCriticalChance: player.talents.barCriticalChance.valueOf(),\n            barSpeed: player.talents.barSpeed.valueOf(),\n            coinGain: player.talents.coinGain.valueOf()\n        },\n        barFragments: player.barFragments.valueOf()\n    };\n\n    const save = btoa(JSON.stringify(saveObject));\n    if (save !== null) {\n        await localforage.setItem('UPBSave', save);\n    }\n\n}\n\n/**\n * Map of properties on the Player object to adapt\n */\nconst toAdapt = new Map<string,(data: Partial<Player>, player: Player) => unknown>([\n    ['coins', (data, player) => new Coins(Number(data.coins?.amount ?? 0), player)],\n    ['coinUpgrades.barSpeed', Transform.transformBarSpeed],\n    ['coinUpgrades.barMomentum', Transform.transformBarMomentum],\n    ['coinUpgrades.barReverberation', Transform.transformReverberation],\n    ['coinUpgrades.barVibration', Transform.transformVibration],\n    ['coinUpgrades.barAgitation', Transform.transformAgitation],\n    ['coinUpgrades.barAdoption', Transform.transformAdoption],\n    ['coinUpgrades.barEmpowerment', Transform.transformEmpowerment],\n    ['coinUpgrades.barReinforcement', Transform.transformReinforcement],\n    ['coinUpgrades.barResonance', Transform.transformResonance],\n    ['talents.barCriticalChance', Transform.transformTalentBarCriticalChance],\n    ['talents.barSpeed', Transform.transformBarSpeedTalent],\n    ['talents.coinGain', Transform.transformTalentCoinGain],\n    ['barFragments', (data, player) => new ProgressFragment(Number(data.barFragments?.amount ?? 0), player)]\n]);\n\n/**\n * Loads from localforage directly\n */\nconst loadSavefile = async () => {\n    const save = await localforage.getItem<string>('UPBSave');\n    const data = save ? JSON.parse(atob(save)) as Player & Record<string, unknown> : null;\n\n    // data is null on the first load!\n\n    if (data !== null) {\n        const keys = Object.keys(data) as (keyof Player & string)[];\n\n        for (const key of keys) {\n            // If the property doesn't exist on the player object anymore, ignore\n            if (!(key in blankSave)) continue;\n            // If the property will be modified later, don't assign it here\n            if (toAdapt.has(key)) continue;\n\n            Object.defineProperty(player, key, { value: data[key] });\n        }\n    }\n\n    for (const [key, adapter] of toAdapt) {\n        setProperty(player, key, adapter(data ?? player, player));\n    }\n}\n\nexport const intervalHold = new Set<ReturnType<typeof setInterval>>();\nexport const interval = new Proxy(setInterval, {\n    apply(target, thisArg, args: Parameters<typeof setInterval>) {\n        const set = target.apply(thisArg, args);\n        intervalHold.add(set);\n        return set;\n    }\n});\n\nexport const clearInt = new Proxy(clearInterval, {\n    apply(target, thisArg, args: [ReturnType<typeof setInterval>]) {\n        const id = args[0];\n        if (intervalHold.has(id)) {\n            intervalHold.delete(id);\n        }\n\n        return target.apply(thisArg, args);\n    }\n});\n\nwindow.addEventListener('pagehide', () => {\n    // This fixes a bug in Chrome (who would have guessed?) that\n    // wouldn't properly load elements if the user scrolled down\n    // and reloaded a page. Why is this a bug, Chrome? Why would\n    // a page that is reloaded be affected by what the user did\n    // beforehand? How does anyone use this buggy browser???????\n    window.scrollTo(0, 0);\n});\n\n\n/**\n * Performance toggles\n * lastUpdate: updates every tick but is default 0 when page load\n * FPS: How many times the game is to update (tick) per second.\n */\nlet lastUpdate = 0;\nexport const FPS = 24;\nconst saveRate = 5000\n\nexport const loadGame = async () => {\n    for (const timer of intervalHold) {\n        clearInt(timer);\n    }\n\n    intervalHold.clear();\n\n    await loadSavefile();\n    player.barTNL = computeMainBarTNL(player);\n\n    Object.defineProperty(window, 'player', {\n        value: player\n    });\n\n    updateMainBar(getBarWidth(player.barEXP, player.barTNL));\n    player.barFragments.updateHTML();\n\n    hideStuff('Main');\n\n    updateStyleById(\n        'progression',\n        {\n            backgroundColor: backgroundColorCreation(player)\n        }\n    );\n    updateElementById(\n        'coinWorth',\n        {\n            textContent: `Worth ${format(player.coinValueCache)} coins`\n        }\n    );\n\n    if (player.coinValueCache) {\n        updateStyleById(\n            'coinWorth',\n            {\n                color: 'gold'\n            }\n        )\n    }\n\n    lastUpdate = performance.now();\n    interval(tick, 1000 / FPS);\n    interval(updateDPS, 1000, player);\n    interval(saveGame, saveRate, player)\n}\n\nexport const resetGame = async () => {\n    const confirmed = await Confirm('Are you SURE you want to reset the game?');\n\n    if (confirmed === false) {\n        return Alert('OK, the game hasn\\'t been reset!');\n    }\n\n    await localforage.removeItem('UPBSave');\n\n    const keys = Object.keys(player) as (keyof Player)[];\n\n    for (const key of keys) {\n        if (typeof player[key] === 'object') {\n            delete player[key];\n            continue;\n        }\n\n        Object.defineProperty(player, key, { value: blankSave[key] });\n    }\n\n    await loadGame();\n}\n\nexport const tick = () => {\n    const now = performance.now();\n    const delta = now - lastUpdate;\n\n    tock(delta/1000)\n    lastUpdate += delta\n}\n\n/**\n * Updates major game states (the main progress bar) per tick (about 50/sec)\n * @param delta how many seconds have elapsed since the previous tick\n */\nexport const tock = (delta: number) => {\n    incrementMainBarEXP(delta, player);\n    player.refreshTime += delta;\n    updateElementById(\n        'refresh-timer',\n        { textContent: `${format(player.refreshTime, 2)}s` }\n    );\n    const width = getBarWidth(player.barEXP, player.barTNL);\n\n    if (width < 100) {\n        updateMainBar(width);\n    } else {\n        levelUpBar(player);\n    }\n\n    updateMainBarInformation(player);\n}\n\n/*\n* Miscellaneous Game Variables\n*/\nexport const minimumRefreshCounter = 60", "export const getElementById = (id: string): HTMLElement =>\n    document.getElementById(id) as HTMLElement;\n\nexport const updateElement = <\n    T extends HTMLElement | CSSStyleDeclaration,\n    R extends keyof T\n>(\n        element: T,\n        keys: Record<R, T[R]>\n    ): boolean => {\n    if (document.visibilityState === 'hidden') return false;\n\n    const entries = Object.entries(keys) as [R, T[R]][];\n\n    for (const [prop, key] of entries) {\n        element[prop] = key;\n    }\n\n    return true;\n}\n\nexport const updateElementById = <R extends keyof HTMLElement>(\n    id: string,\n    keys: Record<R, HTMLElement[R]>\n): boolean => {\n    if (document.visibilityState === 'hidden') return false;\n\n    return updateElement(\n        getElementById(id),\n        keys\n    );\n}\n\nexport const updateStyleById = <R extends keyof CSSStyleDeclaration>(\n    id: string,\n    keys: Record<R, CSSStyleDeclaration[R]>\n): boolean => {\n    if (document.visibilityState === 'hidden') return false;\n\n    return updateElement(\n        getElementById(id).style,\n        keys\n    );\n}", "import { getElementById } from '../Utilities/Render';\n\nconst querySelector = <\n\tR extends Element = HTMLElement,\n\tT extends Document | ParentNode = Document | ParentNode\n>(item: T, args: Parameters<T['querySelector']>[0]): R => {\n    return item.querySelector(args) as R;\n}\n\nconst ConfirmCB = (text: string, cb: (value: boolean) => void) => {\n    const conf = getElementById('confirmationBox');\n    const confWrap = getElementById('confirmWrapper');\n    const popup = querySelector(document, '#confirm');\n    const overlay = querySelector(document, '#transparentBG');\n    const ok = querySelector(popup, '#okConfirm');\n    const cancel = querySelector(popup, '#cancelConfirm');\n\n    conf.style.display = 'block';\n    confWrap.style.display = 'block';\n    overlay.style.display = 'block';\n    querySelector(popup, 'p').textContent = text;\n    popup.focus();\n\n    // IF you clean up the typing here also clean up PromptCB\n    const listener = ({ target }: MouseEvent | { target: HTMLElement }) => {\n        const targetEl = target as HTMLButtonElement;\n        ok.removeEventListener('click', listener);\n        cancel.removeEventListener('click', listener);\n        popup.removeEventListener('keyup', kbListener);\n\n        conf.style.display = 'none';\n        confWrap.style.display = 'none';\n        overlay.style.display = 'none';\n\n        return cb(targetEl === ok);\n    }\n\n    const kbListener = (e: KeyboardEvent) => {\n        if (e.key === 'Enter' || e.key === ' ') {\n            return listener({ target: ok })\n        } else if (e.key === 'Escape') {\n            return listener({ target: cancel })\n        }\n\n        return e.preventDefault();\n    }\n\n    ok.addEventListener('click', listener);\n    cancel.addEventListener('click', listener);\n    popup.addEventListener('keyup', kbListener);\n}\n\nconst AlertCB = (text: string, cb: (value: undefined) => void) => {\n    const conf = getElementById('confirmationBox');\n    const alertWrap = getElementById('alertWrapper');\n    const overlay = querySelector(document, '#transparentBG');\n    const popup = querySelector(document, '#alert');\n    const ok = querySelector(popup, '#okAlert');\n\n    conf.style.display = 'block';\n    alertWrap.style.display = 'block';\n    overlay.style.display = 'block';\n    querySelector(popup, 'p').textContent = text;\n    popup.focus();\n\n    const listener = () => {\n        ok.removeEventListener('click', listener);\n        popup.removeEventListener('keyup', kbListener);\n\n        conf.style.display = 'none';\n        alertWrap.style.display = 'none';\n        overlay.style.display = 'none';\n        cb(undefined);\n    }\n\n    const kbListener = (e: KeyboardEvent) => (e.key === 'Enter' || e.key === ' ') && listener();\n\n    ok.addEventListener('click', listener);\n    popup.addEventListener('keyup', kbListener);\n}\n\nconst PromptCB = (text: string, cb: (value: string | null) => void) => {\n    const conf = getElementById('confirmationBox');\n    const confWrap = getElementById('promptWrapper');\n    const overlay = querySelector(document, '#transparentBG');\n    const popup = querySelector(document, '#prompt');\n    const ok = querySelector(popup, '#okPrompt');\n    const cancel = querySelector(popup, '#cancelPrompt');\n\n    conf.style.display = 'block';\n    confWrap.style.display = 'block';\n    overlay.style.display = 'block';\n    querySelector(popup, 'label').textContent = text;\n    querySelector(popup, 'input').focus();\n\n    // kinda disgusting types but whatever\n    const listener = ({ target }: MouseEvent | { target: HTMLElement }) => {\n        const targetEl = (target as HTMLElement).parentNode as HTMLInputElement;\n        const el = querySelector<HTMLInputElement>(targetEl, 'input');\n\n        ok.removeEventListener('click', listener);\n        cancel.removeEventListener('click', listener);\n        querySelector(popup, 'input').removeEventListener('keyup', kbListener);\n\n        conf.style.display = 'none';\n        confWrap.style.display = 'none';\n        overlay.style.display = 'none';\n\n        cb(targetEl.id === ok.id ? el.value : null);\n        el.value = el.textContent = '';\n    }\n\n    const kbListener = (e: KeyboardEvent) => {\n        if (e.key === 'Enter') {\n            return listener({ target: ok });\n        } else if (e.key === 'Escape') {\n            return listener({ target: cancel });\n        }\n\n        return e.preventDefault();\n    }\n\n    ok.addEventListener('click', listener);\n    cancel.addEventListener('click', listener);\n    querySelector(popup, 'input').addEventListener('keyup', kbListener);\n}\n\n\n/*** Promisified version of the AlertCB function. */\nexport const Alert = (text: string): Promise<ReturnType<typeof alert>> =>\n    new Promise(res => AlertCB(text, res));\n/*** Promisified version of the PromptCB function. */\nexport const Prompt = (text: string): Promise<ReturnType<typeof prompt>> =>\n    new Promise(res => PromptCB(text, res));\n/*** Promisified version of the ConfirmCB function */\nexport const Confirm = (text: string): Promise<ReturnType<typeof confirm>> =>\n    new Promise(res => ConfirmCB(text, res));", "/**\n * Format any number to something pretty! Code lifted from another project of mine, Ipsum (2021-)\n * @param n : A number to be formatted\n * @param accuracy : The amount of decimal digits to be displayed\n * @returns a string of the number formatted to specific conditions.\n */\nexport const format = (n: number, accuracy = 0): string => {\n    if (n < 0) return '-' + format(-n, accuracy);\n\n    if (n >= 1e6) {\n        // Get the power!\n        const power = Math.floor(Math.log10(n))\n        n /= Math.pow(10, power)\n\n        return format(n, 2) + 'e' + format(power)\n    }\n\n    const truncatedNumber = Math.floor(n);\n    const decimalValue = n - truncatedNumber;\n\n    const stringedInteger = truncatedNumber.toLocaleString();\n\n    const decimalPoint = accuracy > 0 && n !== 0;\n\n    let returnDecimalRaw = Math.pow(10, accuracy) * decimalValue;\n\n    // Fix Float Point Error!\n    const tolerance = 1e-6;\n    if (Math.ceil(returnDecimalRaw) - returnDecimalRaw < tolerance) {\n        returnDecimalRaw = Math.ceil(returnDecimalRaw);\n    }\n    // End of Fix Float Point Error!\n\n    let returnDecimalValue = decimalPoint\n        ? Math.floor(returnDecimalRaw).toString()\n        : '';\n\n    if (returnDecimalValue !== '') {\n        while (returnDecimalValue.length < accuracy) {\n            returnDecimalValue = '0' + returnDecimalValue;\n        }\n\n        returnDecimalValue = '.' + returnDecimalValue;\n    }\n\n    return stringedInteger + returnDecimalValue;\n};", "import { Player } from '../../types/player';\n\nexport type Currencies = 'Coins'\n\nexport abstract class Currency {\n    constructor(\n        public amount = 0,\n        public player: Player\n    ) {\n        this.amount = amount;\n        this.updateHTML();\n    }\n\n    spend(amount: number):void {\n        if (this.amount >= amount) {\n            this.amount -= amount;\n            this.updateHTML();\n        }\n    }\n\n    gain(amount: number):void {\n        this.amount += amount;\n        this.updateHTML();\n        this.updateOnGain(amount);\n    }\n\n    set(amount: number):void {\n        this.amount = amount;\n        this.updateHTML();\n    }\n\n    public valueOf () {\n        return { amount: this.amount };\n    }\n\n    abstract updateOnGain(amount: number): void;\n    abstract updateHTML(): void;\n\n}", "import { format } from '../../../Utilities/Format';\nimport { updateElementById } from '../../../Utilities/Render';\nimport { Currency } from '../Currency'\n\nexport class Coins extends Currency {\n    updateHTML(): void {\n        updateElementById(\n            'gold-amount',\n            {\n                textContent: format(this.amount)\n            }\n        );\n    }\n\n    updateOnGain(amount: number): void {\n        if (amount > 0) {\n            this.player.talents.coinGain.gainEXP(amount)\n        }\n    }\n}", "import { format } from '../../../Utilities/Format';\nimport { updateElementById } from '../../../Utilities/Render';\nimport { Currency } from '../Currency';\n\nexport class ProgressFragment extends Currency {\n    updateHTML(): void {\n        updateElementById(\n            'fragment-amount',\n            { textContent: format(this.amount) }\n        );\n        updateElementById(\n            'fragment-bonus',\n            { textContent: format(this.amount) }\n        );\n        updateElementById(\n            'fragment-gain',\n            { textContent: format(this.getAmountOnRefresh()) }\n        );\n    }\n\n    getAmountOnRefresh(): number {\n        const level = this.player.barLevel\n\n        let baseAmount = 100 * Math.pow(1.07, -5);\n        baseAmount *= Math.pow(1.07, level);\n        baseAmount *= Math.pow(3, Math.floor(level / 100));\n\n        baseAmount *= (1 + this.player.criticalHitsThisRefresh * this.player.coinUpgrades.barAgitation.upgradeEffect());\n        baseAmount *= (1 + this.player.coinUpgrades.barReinforcement.upgradeEffect() * this.player.barLevel);\n        return Math.floor(baseAmount);\n    }\n\n    unspentBonus(): number {\n        return (1 + 1/100 * this.amount)\n    }\n\n    updateOnGain(): void {\n        // This is intentionally empty. Add something here if it seems suitable.\n        // Called whenever this.gain() is called.\n    }\n}", "import { backgroundColorCreation } from '../Main/ProgressBar/Properties';\nimport { Player } from '../types/player';\nimport { format } from './Format';\nimport { updateElementById, updateStyleById } from './Render'\n\nexport type Tabs = 'Main' | 'Upgrades' | 'Talents'\n\nexport const hideStuff = (tab: Tabs) => {\n    updateStyleById(\n        'mainTab',\n        { display: 'none' }\n    );\n    updateStyleById(\n        'upgradeTab',\n        { display: 'none' }\n    );\n    updateStyleById(\n        'talentsTab',\n        { display: 'none' }\n    );\n\n    if (tab === 'Main') {\n        updateStyleById(\n            'mainTab',\n            { display: 'block' }\n        );\n    } else if (tab === 'Upgrades') {\n        updateStyleById(\n            'upgradeTab',\n            { display: 'block' }\n        );\n    } else if (tab === 'Talents') {\n        updateStyleById(\n            'talentsTab',\n            { display: 'block' }\n        );\n    }\n}\n\nexport const onCriticalHit = (player: Player, superCrit: boolean) => {\n\n    if (superCrit) {\n        updateStyleById(\n            'progression',\n            { backgroundColor: 'gold'}\n        );\n    } else {\n        updateStyleById(\n            'progression',\n            { backgroundColor: 'turquoise'}\n        );\n    }\n\n    setTimeout(() => {\n        updateStyleById(\n            'progression',\n            {backgroundColor: backgroundColorCreation(player)}\n        );\n    }, 500);\n\n    updateElementById(\n        'refresh-crit-counter',\n        { textContent: format(player.criticalHitsThisRefresh) }\n    )\n\n    updateElementById(\n        'refresh-crit-fragments',\n        { textContent: format(100 * player.criticalHitsThisRefresh *\n            player.coinUpgrades.barAgitation.upgradeEffect(), 2) }\n    )\n    player.barFragments.updateHTML();\n\n}\n\nexport const onRefresh = (player: Player) => {\n    updateStyleById(\n        'progression',\n        { backgroundColor: 'cyan' }\n    );\n\n    setTimeout(() => {\n        updateStyleById(\n            'progression',\n            {backgroundColor: backgroundColorCreation(player)}\n        );\n    }, 1000);\n\n    updateElementById(\n        'coinWorth',\n        { textContent: `Worth ${format(player.coinValueCache)} coins` }\n    );\n\n    if (player.coinValueCache > 0) {\n        updateStyleById(\n            'coinWorth',\n            { color: 'gold' }\n        )\n    } else {\n        updateStyleById(\n            'coinWorth',\n            { color: 'grey' }\n        )\n    }\n\n    updateElementById(\n        'refresh-crit-counter',\n        { textContent: format(player.criticalHitsThisRefresh) }\n    );\n\n    updateElementById(\n        'refresh-counter',\n        { textContent: format(player.refreshCount)}\n    );\n}", "import { Player } from '../../types/player';\nimport { format } from '../../Utilities/Format';\nimport { updateElementById, updateStyleById } from '../../Utilities/Render';\nimport { onCriticalHit } from '../../Utilities/UpdateHTML';\nimport { getElementById } from '../../Utilities/Render';\n\n/**\n * Basic Bar Stats\n */\nconst baseEXPReq = 10;\nlet currentPerSec = 0;\nlet previousPerSec = 0;\n\nexport const computeMainBarTNL = (player: Player) => {\n    let TNL = 0\n    // Additive Component\n    TNL += baseEXPReq * Math.pow(player.barLevel + 1, 2)\n    // Nerf until level 20.\n    TNL *= Math.min(1, (player.barLevel + 20) / 40)\n    // Buff after level 20.\n    TNL *= Math.max(1, 1 + (player.barLevel - 20) / 10)\n    // Multiplicative Component (Bumps at 40, 100, 200)\n    if (player.barLevel > 40) {\n        TNL *= Math.pow(2, 1/10 * (player.barLevel - 40));\n    }\n    if (player.barLevel > 100) {\n        TNL *= Math.pow(2, 1/10 * (player.barLevel - 100));\n    }\n    if (player.barLevel > 200) {\n        TNL *= Math.pow(2, 1/10 * (player.barLevel - 200));\n    }\n\n    // BOSS\n    if (player.barLevel % 5 === 0) {\n        TNL *= Math.max(1, (1/2 * player.barLevel / 10))\n    }\n\n    return TNL\n}\n\nexport const computeBarArmor = (player: Player) => {\n    // Armor is a value in [0, 1]\n    // 1 indicates no progress, 0 indicates full progress.\n\n    let baseArmor = 0\n    if (player.barLevel >= 5) {\n        baseArmor = 0.1\n    }\n    if (player.barLevel >= 10) {\n        baseArmor += 0.9 * (1 - Math.pow(Math.E, -player.barLevel / 200))\n    }\n\n    if (baseArmor >= 0.9999) {\n        return 10000\n    }\n\n    return 1 / (1 - baseArmor)\n}\n\nexport const computeArmorMultiplier = (player: Player) => {\n    const armor = computeBarArmor(player);\n    return armor * (1 - player.barEXP / player.barTNL)\n}\n\nexport const incrementMainBarEXP = (delta: number, player: Player) => {\n    if (delta === undefined || delta === null) {\n        return\n    }\n    let baseAmountPerSecond = 1\n    baseAmountPerSecond += player.coinUpgrades.barSpeed.upgradeEffect();\n    baseAmountPerSecond *= player.barFragments.unspentBonus();\n    baseAmountPerSecond *= Math.pow(\n        1 + player.coinUpgrades.barMomentum.upgradeEffect(),\n        Math.sqrt(100 * Math.min(1, player.barEXP / player.barTNL))\n    );\n    baseAmountPerSecond /= computeArmorMultiplier(player);\n    baseAmountPerSecond *= player.talents.barSpeed.talentEffect();\n    baseAmountPerSecond *= Math.pow(1 + player.coinUpgrades.barEmpowerment.upgradeEffect(), player.barLevel);\n\n    const criticalRoll = Math.random();\n    const total =\n        player.coinUpgrades.barReverberation.upgradeEffect() + player.talents.barCriticalChance.talentEffect();\n    if (criticalRoll < total) {\n        let superCrit = false\n        baseAmountPerSecond *= player.coinUpgrades.barVibration.upgradeEffect();\n        player.talents.barCriticalChance.gainEXP(delta);\n        player.criticalHits += 1;\n        player.criticalHitsThisRefresh += 1;\n\n        const superCriticalRoll = Math.random();\n        if (superCriticalRoll < player.coinUpgrades.barResonance.upgradeEffect()) {\n            baseAmountPerSecond *= 3\n            player.coins.gain(2 + Math.floor(player.coinValueCache / 5) - 2 * Math.min(1, player.coinValueCache))\n            superCrit = true\n        }\n        console.log(superCrit)\n        onCriticalHit(player, superCrit);\n    }\n\n    const actualAmount = baseAmountPerSecond * delta\n    player.barEXP += actualAmount\n    currentPerSec += actualAmount\n\n    updateElementById(\n        'perSecCurr',\n        { textContent: `+${format(currentPerSec,2)} this sec` }\n    );\n}\n\n/**\n * Obtain the width of a progress bar given current progress and required progress\n * @param currScore The amount of progress (number) the player has toward something\n * @param targetScore How much progress is needed to fill the progress bar\n * @returns a Number [0, 100] indicating how wide the bar should be, with precision 0.1\n */\nexport const getBarWidth = (currScore: number, targetScore: number) => {\n    // Only return increments of 0.1%\n    return Math.min(100, 0.1 * Math.floor(1000 * currScore / targetScore))\n}\n\nexport const updateMainBar = (width: number) => {\n    updateStyleById(\n        'progression',\n        { width: `${width}%` }\n    );\n}\n\nexport const backgroundColorCreation = (player: Player) => {\n\n    // \"BOSS\"\n    if (player.barLevel % 5 === 0) {\n        console.log('testing!!!!')\n        if (player.barLevel >= 320) return '#FF0000'\n\n        const R = (128 + 4 * Math.floor(player.barLevel / 10)).toString(16).padStart(2, '0');\n        return `#${R}0000`\n    }\n\n    if (player.barLevel >= 128) return '#FFFFFF';\n\n    const R = (128 + player.barLevel).toString(16).padStart(2, '0');\n    const G = (2 * player.barLevel).toString(16).padStart(2, '0');\n    const B = (128 + player.barLevel).toString(16).padStart(2, '0');\n\n    return `#${R}${G}${B}`;\n}\n\nexport const levelUpBar = (player: Player) => {\n    player.coins.gain(player.coinValueCache);\n    player.coinValueCache = computeMainBarCoinWorth(player);\n    player.barEXP -= player.barTNL\n    player.barLevel += 1;\n\n    if (player.barLevel > player.highestBarLevel) {\n        player.highestBarLevel = player.barLevel\n    }\n\n    const barColor = backgroundColorCreation(player);\n    updateStyleById(\n        'progression',\n        { backgroundColor: barColor }\n    );\n\n    player.barTNL = computeMainBarTNL(player)\n\n    // Adjust barEXP to prevent overleveling / snowball effect on levels\n    player.barEXP /= 10;\n    player.barEXP = Math.min(player.barEXP, Math.floor(player.barTNL / 10));\n\n    const width = getBarWidth(player.barEXP, player.barTNL);\n    updateMainBar(width);\n\n    updateElementById(\n        'coinWorth',\n        { textContent: `Worth ${format(player.coinValueCache)} coins` }\n    );\n    player.barFragments.updateHTML();\n\n    if (player.barLevel === 20) {\n        player.talents.barCriticalChance.updateHTML('Level20');\n        player.talents.barSpeed.updateHTML('Level20');\n    }\n}\n\nexport const updateMainBarInformation = (player: Player) => {\n    updateElementById(\n        'level',\n        { textContent: `Level: ${player.barLevel}` }\n    );\n    updateElementById(\n        'exp',\n        { textContent: `EXP: ${format(player.barEXP)}/${format(player.barTNL)}` }\n    );\n}\n\nexport const updateDPS = (player: Player) => {\n    previousPerSec = currentPerSec;\n    currentPerSec = 0;\n    updateElementById(\n        'perSecPrev',\n        { textContent: `+${format(previousPerSec,2)} prev sec` }\n    );\n\n    player.talents.barCriticalChance.updateHTML('Time')\n    player.talents.barSpeed.gainEXP(previousPerSec);\n    player.talents.barSpeed.updateHTML('Time')\n    player.talents.coinGain.updateHTML('Time')\n\n}\n\nexport const computeMainBarCoinWorth = (player: Player) => {\n    let baseWorth = 0;\n\n    const nextLevel = 1 + player.barLevel\n    // Highest level bonus\n    if (nextLevel > player.highestBarLevel) {\n        baseWorth += 3;\n    }\n\n    // Every 5th bar\n    if (nextLevel % 5 === 0) {\n        baseWorth += Math.floor(nextLevel / 5) + 3;\n\n        if (Math.random() < 0.5 && nextLevel > 25) {\n            baseWorth = 0;\n        }\n    }\n\n    // Every 10th bar, adding to the previous\n    if (nextLevel % 10 === 0) {\n        baseWorth += Math.floor(nextLevel / 2);\n    }\n\n    if (nextLevel % 50 === 0) {\n        baseWorth += Math.floor(nextLevel / 2);\n    }\n\n    if (nextLevel % 100 === 0) {\n        baseWorth += Math.floor(nextLevel);\n    }\n\n    if (baseWorth > 100) {\n        baseWorth = 10 * Math.pow(baseWorth, 1/2)\n    }\n    baseWorth *= (1 + player.talents.coinGain.talentEffect());\n\n    const RNGCoin = baseWorth - Math.floor(baseWorth)\n    if (Math.random() < RNGCoin) {\n        baseWorth += 1\n    }\n\n    baseWorth = Math.floor(baseWorth);\n\n    const coinHTML = getElementById('coinWorth');\n    coinHTML.style.color = (baseWorth > 0) ? 'gold' : 'grey'\n\n\n    return baseWorth\n}", "import { Player } from '../../types/player';\n\nexport class Upgrade {\n    constructor(\n        public level: number,\n        public cost: number,\n        public player: Player\n    ) {}\n}", "import { Player } from '../../../types/player';\nimport { format } from '../../../Utilities/Format';\nimport { updateElementById, updateStyleById } from '../../../Utilities/Render';\nimport { Upgrade } from '../Upgrades';\n\nexport abstract class CoinUpgrade extends Upgrade {\n    abstract maxLevel: number; // -1 = infinitys\n\n    constructor(level: number, cost: number, player: Player) {\n        super(level, cost, player)\n        this.updateHTML();\n    }\n\n    capLevel(): void {\n        if (this.maxLevel === -1) return;\n\n        this.level = Math.min(this.maxLevel, this.level)\n    }\n\n    purchaseLevels(amount: number, event: MouseEvent){\n        if (event.shiftKey) {\n            amount = -1;\n            amount = Math.floor(this.player.coins.amount / this.cost);\n        }\n\n        if (this.maxLevel !== -1) {\n            amount = Math.min(amount, this.maxLevel - this.level)\n        }\n\n        if (this.cost * amount <= this.player.coins.amount) {\n            this.player.coins.spend(this.cost * amount)\n            this.level += amount;\n            this.updateHTML();\n        }\n    }\n\n    public override valueOf () {\n        return { level: this.level, cost: this.cost, maxLevel: this.maxLevel };\n    }\n\n    abstract upgradeEffect():number\n\n    abstract updateHTML():void\n\n}\n\nexport const coinUpgradeCosts = {\n    barSpeed: 1,\n    barMomentum: 10,\n    barReverberation: 25,\n    barVibration: 50,\n    barAgitation: 10000,\n    barAdoption: 250,\n    barEmpowerment: 10000,\n    barReinforcement: 20000,\n    barResonance: 2000\n}\n\nexport class CoinBarSpeed extends CoinUpgrade {\n    maxLevel = -1;\n    /**\n     *\n     * @returns Bar Speed to add on top of the base amount. Additive!\n     */\n    upgradeEffect(): number {\n        return 4 * this.level / 100 + 0.06 * Math.min(90, this.level)\n    }\n\n    updateHTML(): void {\n        updateElementById(\n            'coin-bar-speed-effect',\n            {\n                textContent: `+${format(this.upgradeEffect(), 2)} Progress Per Second`\n            }\n        );\n        updateElementById(\n            'coin-bar-speed-name',\n            {\n                textContent: `Bar Speed ${format(this.level)}`\n            }\n        )\n    }\n}\n\nexport class CoinBarMomentum extends CoinUpgrade {\n    expoDivisor = 400\n    maxLevel = Math.ceil(this.expoDivisor * Math.log(1000))\n\n    constructor(level: number, cost: number, player: Player) {\n        super(level, cost, player);\n        this.maxLevel = 100 * Math.round(this.maxLevel / 100);\n        this.capLevel();\n        this.updateHTML();\n    }\n\n    upgradeEffect(): number {\n        if (this.maxLevel === this.level) return (Math.pow(100, 1/10) - 1);\n\n        return (0.45 * (1 - Math.pow(Math.E, -this.level/this.expoDivisor))\n               + 1/200 * Math.min(10, this.level)) * ((Math.pow(100, 1/10) - 1) / 0.5)\n    }\n\n    updateHTML(): void {\n        updateElementById(\n            'coin-bar-momentum-effect',\n            {\n                textContent:\n                    `Up to ${format(Math.pow(1 + this.upgradeEffect(), 10), 2)}x Progress Speed based on fill%`\n            }\n        );\n\n        if (this.level === this.maxLevel) {\n            updateElementById(\n                'coin-bar-momentum-name',\n                {\n                    textContent: 'Bar Momentum [MAX LEVEL]'\n                }\n            )\n            updateStyleById(\n                'coin-bar-momentum-name',\n                {\n                    color: 'orchid'\n                }\n            )\n        } else {\n            updateElementById(\n                'coin-bar-momentum-name',\n                {\n                    textContent: `Bar Momentum ${format(this.level)}/${format(this.maxLevel)}`\n                }\n            )\n        }\n    }\n}\n\nexport class CoinBarReverberation extends CoinUpgrade {\n    expoDivisor = 100\n    maxLevel = Math.ceil(this.expoDivisor * Math.log(1000));\n\n    constructor(level: number, cost: number, player: Player) {\n        super(level, cost, player);\n        this.maxLevel = 100 * Math.round(this.maxLevel / 100);\n        this.capLevel();\n        this.updateHTML();\n    }\n\n    upgradeEffect(): number {\n        if (this.level === this.maxLevel) {\n            return 0.01\n        } else {\n            return 0.009 * (1 - Math.pow(Math.E, -this.level / this.expoDivisor)) + 0.0002 * Math.min(5, this.level);\n        }\n    }\n\n    updateHTML(): void {\n        updateElementById(\n            'coin-bar-reverberation-effect',\n            {\n                textContent: `+${format(100 * this.upgradeEffect(), 2)}% chance to have a CRITICAL TICK`\n            }\n        )\n        if (this.level === this.maxLevel) {\n            updateElementById(\n                'coin-bar-reverberation-name',\n                {\n                    textContent: 'Bar Reverberation [MAX LEVEL]'\n                }\n            )\n            updateStyleById(\n                'coin-bar-reverberation-name',\n                {\n                    color: 'orchid'\n                }\n            )\n        } else {\n            updateElementById(\n                'coin-bar-reverberation-name',\n                {\n                    textContent: `Bar Reverberation ${format(this.level)}/${format(this.maxLevel)}`\n                }\n            )\n        }\n    }\n}\n\nexport class CoinBarVibration extends CoinUpgrade {\n    expoDivisor = 170\n    maxLevel = Math.ceil(this.expoDivisor * Math.log(1000))\n\n    constructor(level: number, cost: number, player: Player) {\n        super(level, cost, player);\n        this.maxLevel = 100 * Math.round(this.maxLevel / 100);\n        this.capLevel();\n        this.updateHTML();\n    }\n\n    upgradeEffect(): number {\n        if (this.level === this.maxLevel) {\n            return 2000\n        } else {\n            return 100 + 1700 * (1 - Math.pow(Math.E, -this.level / this.expoDivisor)) + 20 * Math.min(10, this.level)\n        }\n    }\n\n    updateHTML(): void {\n        updateElementById(\n            'coin-bar-vibration-effect',\n            {\n                textContent: `CRITICAL TICKS fill up the bar ${format(this.upgradeEffect(), 2)}x faster`\n            }\n        )\n        if (this.level === this.maxLevel) {\n            updateElementById(\n                'coin-bar-vibration-name',\n                {\n                    textContent: 'Bar Vibration [MAX LEVEL]'\n                }\n            )\n            updateStyleById(\n                'coin-bar-vibration-name',\n                {\n                    color: 'orchid'\n                }\n            )\n        } else {\n            updateElementById(\n                'coin-bar-vibration-name',\n                {\n                    textContent: `Bar Vibration ${format(this.level)}/${format(this.maxLevel)}`\n                }\n            )\n        }\n    }\n}\n\nexport class CoinBarAgitation extends CoinUpgrade {\n    maxLevel = -1\n\n    constructor(level: number, cost: number, player: Player) {\n        super(level, cost, player);\n        this.updateHTML();\n    }\n\n    upgradeEffect(): number {\n        return this.level / 500\n    }\n\n    updateHTML(): void {\n        updateElementById(\n            'coin-bar-agitation-effect',\n            {\n                textContent: `+${format(100 * this.upgradeEffect(), 2)}% Bar Fragments per CRIT`\n            }\n        )\n        updateElementById(\n            'coin-bar-agitation-name',\n            {\n                textContent: `Bar Agitation ${format(this.level)}`\n            }\n        )\n    }\n}\n\nexport class CoinBarAdoption extends CoinUpgrade {\n    maxLevel = 200;\n\n    constructor(level: number, cost: number, player: Player) {\n        super(level, cost, player);\n        this.capLevel();\n        this.updateHTML();\n    }\n\n    upgradeEffect(): number {\n        return this.level / 100\n    }\n\n    updateHTML(): void {\n        updateElementById(\n            'coin-bar-adoption-effect',\n            {\n                textContent: `+${format(100 * this.upgradeEffect())}% Talent EXP`\n            }\n        )\n        if (this.level === this.maxLevel) {\n            updateElementById(\n                'coin-bar-adoption-name',\n                {\n                    textContent: 'Bar Adoption [MAX LEVEL]'\n                }\n            )\n            updateStyleById(\n                'coin-bar-adoption-name',\n                {\n                    color: 'orchid'\n                }\n            )\n        } else {\n            updateElementById(\n                'coin-bar-adoption-name',\n                {\n                    textContent: `Bar Adoption ${format(this.level)}/${format(this.maxLevel)}`\n                }\n            )\n        }\n    }\n}\n\nexport class CoinBarEmpowerment extends CoinUpgrade {\n    maxLevel = 20\n\n    constructor(level: number, cost: number, player: Player) {\n        super(level, cost, player);\n        this.capLevel();\n        this.updateHTML();\n    }\n\n    upgradeEffect(): number {\n        return 0.02 * this.level / 200\n    }\n\n    updateHTML(): void {\n        updateElementById(\n            'coin-bar-empowerment-effect',\n            {\n                textContent: `+${format(100 * this.upgradeEffect(), 2)}% Progress Speed per bar level: (1+x)^(level)`\n            }\n        )\n        if (this.level === this.maxLevel) {\n            updateElementById(\n                'coin-bar-empowerment-name',\n                {\n                    textContent: 'Bar Empowerment [MAX LEVEL]'\n                }\n            )\n            updateStyleById(\n                'coin-bar-empowerment-name',\n                {\n                    color: 'orchid'\n                }\n            )\n        } else {\n            updateElementById(\n                'coin-bar-empowerment-name',\n                {\n                    textContent: `Bar Empowerment ${format(this.level)}/${format(this.maxLevel)}`\n                }\n            )\n        }\n    }\n\n}\n\nexport class CoinBarReinforcement extends CoinUpgrade {\n    maxLevel = -1;\n\n    constructor(level: number, cost: number, player: Player) {\n        super(level, cost, player);\n        this.updateHTML();\n    }\n\n    upgradeEffect(): number {\n        return this.level / 1000\n    }\n\n    updateHTML(): void {\n        updateElementById(\n            'coin-bar-reinforcement-effect',\n            {\n                textContent: `+${format(100 * this.upgradeEffect(), 2)}% Bar Fragments per bar level (1 + x * level)`\n            }\n        )\n        updateElementById(\n            'coin-bar-reinforcement-name',\n            {\n                textContent: `Bar Reinforcement ${format(this.level)}`\n            }\n        )\n    }\n}\n\nexport class CoinBarResonance extends CoinUpgrade {\n    expoDivisor = 500\n    maxLevel = Math.ceil(this.expoDivisor * Math.log(1000))\n\n    constructor(level: number, cost: number, player: Player) {\n        super(level, cost, player);\n        this.maxLevel = 100 * Math.round(this.maxLevel / 100);\n        this.capLevel();\n        this.updateHTML();\n    }\n\n    upgradeEffect(): number {\n        if (this.level === this.maxLevel) {\n            return 1;\n        } else {\n            return 1 - Math.pow(Math.E, -this.level / this.expoDivisor)\n        }\n    }\n\n    updateHTML(): void {\n        updateElementById(\n            'coin-bar-resonance-effect',\n            {\n                textContent: `On CRIT, ${format(100 * this.upgradeEffect(), 2)}% chance of SUPER\n                             CRIT (3x damage and earn coins)`\n            }\n        )\n        if (this.level === this.maxLevel) {\n            updateElementById(\n                'coin-bar-resonance-name',\n                {\n                    textContent: 'Bar Resonance [MAX LEVEL]'\n                }\n            )\n            updateStyleById(\n                'coin-bar-resonance-name',\n                {\n                    color: 'orchid'\n                }\n            )\n        } else {\n            updateElementById(\n                'coin-bar-resonance-name',\n                {\n                    textContent: `Bar Resonance ${format(this.level)}/${format(this.maxLevel)}`\n                }\n            )\n        }\n    }\n}", "import type { Player } from '../../../types/player';\nimport { getProperty } from 'dot-prop';\nimport { CoinBarSpeed, coinUpgradeCosts } from '../../Upgrades/Variants/Coin';\n\nconst path = 'coinUpgrades.barSpeed' as const;\n\nexport const transform = (data: Partial<Player>, player: Player) => {\n    const value = getProperty(data, path) ?? getProperty(player, path);\n\n    return new CoinBarSpeed(\n        value?.level ?? 0,\n        coinUpgradeCosts.barSpeed,\n        player\n    );\n}", "import type { Player } from '../../../types/player';\nimport { getProperty } from 'dot-prop';\nimport { CoinBarMomentum, coinUpgradeCosts } from '../../Upgrades/Variants/Coin';\n\nconst path = 'coinUpgrades.barMomentum' as const;\n\nexport const transform = (data: Partial<Player>, player: Player) => {\n    const value = getProperty(data, path) ?? getProperty(player, path);\n\n    return new CoinBarMomentum(\n        value?.level ?? 0,\n        coinUpgradeCosts.barMomentum,\n        player\n    );\n}", "import type { Player } from '../../../types/player';\nimport { getProperty } from 'dot-prop';\nimport { CoinBarReverberation, coinUpgradeCosts } from '../../Upgrades/Variants/Coin';\n\nconst path = 'coinUpgrades.barReverberation' as const;\n\nexport const transform = (data: Partial<Player>, player: Player) => {\n    const value = getProperty(data, path) ?? getProperty(player, path);\n\n    return new CoinBarReverberation(\n        value?.level ?? 0,\n        coinUpgradeCosts.barReverberation,\n        player\n    );\n}", "import type { Player } from '../../../types/player';\nimport { getProperty } from 'dot-prop';\nimport { CoinBarVibration, coinUpgradeCosts } from '../../Upgrades/Variants/Coin';\n\nconst path = 'coinUpgrades.barVibration' as const;\n\nexport const transform = (data: Partial<Player>, player: Player) => {\n    const value = getProperty(data, path) ?? getProperty(player, path);\n\n    return new CoinBarVibration(\n        value?.level ?? 0,\n        coinUpgradeCosts.barVibration,\n        player\n    );\n}", "import type { Player } from '../../../types/player';\nimport { getProperty } from 'dot-prop';\nimport { CoinBarAgitation, coinUpgradeCosts } from '../../Upgrades/Variants/Coin';\n\nconst path = 'coinUpgrades.barAgitation' as const;\n\nexport const transform = (data: Partial<Player>, player: Player) => {\n    const value = getProperty(data, path) ?? getProperty(player, path);\n\n    return new CoinBarAgitation(\n        value?.level ?? 0,\n        coinUpgradeCosts.barAgitation,\n        player\n    )\n}", "import type { Player } from '../../../types/player';\nimport { getProperty } from 'dot-prop';\nimport { CoinBarAdoption, coinUpgradeCosts } from '../../Upgrades/Variants/Coin';\n\nconst path = 'coinUpgrades.barAdoption' as const;\n\nexport const transform = (data: Partial<Player>, player: Player) => {\n    const value = getProperty(data, path) ?? getProperty(player, path);\n\n    return new CoinBarAdoption(\n        value?.level ?? 0,\n        coinUpgradeCosts.barAdoption,\n        player\n    )\n}", "import type { Player } from '../../../types/player';\nimport { getProperty } from 'dot-prop';\nimport { CoinBarEmpowerment, coinUpgradeCosts } from '../../Upgrades/Variants/Coin';\n\nconst path = 'coinUpgrades.barEmpowerment' as const;\n\nexport const transform = (data: Partial<Player>, player: Player) => {\n    const value = getProperty(data, path) ?? getProperty(player, path);\n\n    return new CoinBarEmpowerment(\n        value?.level ?? 0,\n        coinUpgradeCosts.barEmpowerment,\n        player\n    )\n}", "import type { Player } from '../../../types/player';\nimport { getProperty } from 'dot-prop';\nimport { CoinBarReinforcement, coinUpgradeCosts } from '../../Upgrades/Variants/Coin';\n\nconst path = 'coinUpgrades.barReinforcement' as const;\n\nexport const transform = (data: Partial<Player>, player: Player) => {\n    const value = getProperty(data, path) ?? getProperty(player, path);\n\n    return new CoinBarReinforcement(\n        value?.level ?? 0,\n        coinUpgradeCosts.barReinforcement,\n        player\n    )\n}", "import type { Player } from '../../../types/player';\nimport { getProperty } from 'dot-prop';\nimport { CoinBarResonance, coinUpgradeCosts } from '../../Upgrades/Variants/Coin';\n\nconst path = 'coinUpgrades.barResonance' as const;\n\nexport const transform = (data: Partial<Player>, player: Player) => {\n    const value = getProperty(data, path) ?? getProperty(player, path);\n\n    return new CoinBarResonance(\n        value?.level ?? 0,\n        coinUpgradeCosts.barResonance,\n        player\n    )\n}", "//import assert from 'assert'\n\n/**\n *\n * @param multiplier Static coefficient for upgrade\n * @param baseLevel Level provided as already obtained\n * @param toLevel Level desired to buy, must be at least as much as baseLevel\n * @param power Levels are raised to this number to tabulate final cost\n * @returns Final cost, based on the fact n-th level costs mult * n^power total.\n */\nexport const computePolyCost = (multiplier: number, baseLevel: number, toLevel: number, power = 1) => {\n//    assert(baseLevel <= toLevel, \"Must compute cost for weakly greater level than baseLevel!\")\n    return Math.ceil(multiplier * (Math.pow(toLevel, power) - Math.pow(baseLevel, power)))\n}\n\n/**\n *\n * @param multiplier Static coefficient for upgrade\n * @param baseLevel Level provided as already obtained\n * @param toLevel Level desired to buy, must be at least as much as baseLevel\n * @param ratio Levels are raised to this number to tabulate final cost, must be greater than 1\n * @returns Final Cost, based on the fact n-th level follows geometric formulae.\n */\nexport const computeExponentialCost = (multiplier: number, baseLevel: number, toLevel: number, ratio = 2) => {\n//    assert(baseLevel <= toLevel, \"Must compute cost for weakly greater level than baseLevel!\")\n//    assert(ratio > 1, \"Must provide a ratio greater than one!\")\n    const baseLevelCost = multiplier * (1 - Math.pow(ratio, baseLevel)) / (1 - ratio)\n    const toLevelCost = multiplier * (1 - Math.pow(ratio, toLevel)) / (1 - ratio)\n\n    return toLevelCost - baseLevelCost\n}", "import { minimumRefreshCounter } from '../../Game'\nimport { Alert } from '../../HTML/Popups'\nimport { Player } from '../../types/player'\nimport { format } from '../../Utilities/Format'\nimport { onCriticalHit, onRefresh } from '../../Utilities/UpdateHTML'\nimport { computeMainBarCoinWorth, computeMainBarTNL, getBarWidth, updateMainBar } from '../ProgressBar/Properties'\n\nexport type resetTypes = 'Refresh' | 'Transcend'\n\nexport const reset = (variant: resetTypes, player: Player) => {\n    if (variant === 'Refresh' && player.barLevel >= 5) {\n\n        if (player.refreshTime < minimumRefreshCounter) {\n            return void Alert(`Currently, refreshes have a ${format(minimumRefreshCounter)} second cooldown. Sorry!`);\n        }\n\n        player.barFragments.set(player.barFragments.getAmountOnRefresh())\n\n        player.barEXP = 0\n        player.barLevel = 0\n\n        player.barTNL = computeMainBarTNL(player);\n        updateMainBar(getBarWidth(player.barEXP, player.barTNL));\n        player.barFragments.updateHTML();\n        player.talents.barCriticalChance.convertToPerm();\n        player.talents.barCriticalChance.updateHTML('Initialize');\n        player.talents.barSpeed.convertToPerm();\n        player.talents.barSpeed.updateHTML('Initialize')\n        player.talents.coinGain.convertToPerm();\n        player.talents.coinGain.updateHTML('Initialize')\n        player.refreshCount += 1\n        player.refreshTime = 0;\n        player.criticalHitsThisRefresh = 0;\n        player.coinValueCache = computeMainBarCoinWorth(player);\n\n        onCriticalHit(player, false);\n        onRefresh(player);\n    } else {\n        return void Alert('You cannot refresh yet. Get to level 5 lol')\n    }\n}", "import { FPS, minimumRefreshCounter } from '../../../Game'\nimport { Alert, Confirm } from '../../../HTML/Popups'\nimport { Player } from '../../../types/player'\nimport { format } from '../../../Utilities/Format'\nimport { computePolyCost } from '../../../Utilities/HelperFunctions'\nimport { updateElementById, updateStyleById } from '../../../Utilities/Render'\nimport { reset } from '../../Reset/Refresh'\nimport { Upgrade } from '../Upgrades'\n\nexport const isLevel20 = (player: Player) => player.barLevel >= 20;\n\nexport type TalentHTMLType = 'Initialize' | 'GainEXP' | 'LevelUp' | 'PermLevelUp' | 'Time' | 'Level20' | 'Sacrifice'\n\nexport abstract class Talent extends Upgrade {\n    abstract idHTML: string\n    investedFragments: number\n    permLevel: number\n    currEXP: number\n    currTNL: number\n\n    // In this case, \"cost\" refers to the base EXP requirement.\n    constructor(level: number, cost: number,\n        investedFragments: number, permLevel: number,\n        currEXP: number, player: Player) {\n        super(level, cost, player)\n        this.investedFragments = investedFragments;\n        this.permLevel = permLevel;\n        this.currEXP = currEXP\n        this.currTNL = this.calculateTNL();\n    }\n\n    calculateTNL(): number {\n        let baseCost = computePolyCost(this.cost, this.level, this.level + 1, 2)\n        const costIncreaseThresholds = [50, 100, 200, 500, 1000, 2000, 5000, 10000]\n        for (const level of costIncreaseThresholds) {\n            if (this.level >= level) {\n                baseCost *= 2\n            }\n        }\n        return baseCost;\n    }\n\n    setEXP(amount: number): void {\n        this.currEXP = amount\n        this.updateHTML('GainEXP')\n    }\n\n    /**\n     * Returns the product multipliers that apply to every single talent\n     * If you have a global multiplier you like to add, add it here because it\n     * is a lot safer than putting it in each of the talents (and easier to change later).\n     */\n    globalTalentEXPMultipliers(): number {\n        let globalMult = 1;\n        globalMult *= this.sacrificeBoost();\n        globalMult *= (1 + this.player.coinUpgrades.barAdoption.upgradeEffect());\n        return globalMult\n    }\n\n    gainEXP(dt?: number): void {\n        if (!isLevel20(this.player)) return;\n\n        const amount = this.calculateEXPGain(dt);\n        this.currEXP += amount\n        if (this.currEXP >= this.currTNL) {\n            this.levelUp();\n        }\n        this.updateHTML('GainEXP');\n    }\n\n    subEXP(amount: number): void {\n        if (!isLevel20(this.player)) return;\n        this.currEXP -= amount;\n    }\n\n    levelUp(): void {\n        let counter = 0;\n        while (this.currEXP >= this.currTNL) {\n            if (counter >= 10) break;\n            this.level += 1;\n            this.subEXP(this.currTNL);\n            this.currTNL = this.calculateTNL();\n            counter++;\n        }\n        this.updateHTML('LevelUp');\n    }\n\n    computePermLevelGain(level: number): number {\n        let levelsToGain = 0\n        levelsToGain += Math.sqrt(level);\n        levelsToGain *= Math.min(4, Math.pow(this.player.refreshTime / 300, 2))\n        levelsToGain = Math.min(level, levelsToGain)\n        return Math.floor(levelsToGain)\n    }\n\n    convertToPerm(): void {\n        this.permLevel += this.computePermLevelGain(this.level);\n        this.level = 0;\n        this.setEXP(0);\n        this.currTNL = this.calculateTNL();\n        this.updateHTML('PermLevelUp');\n    }\n\n    getBarWidth(): number {\n        return Math.min(100, 100 * this.currEXP / this.currTNL)\n    }\n\n    sacrificeBoost(): number {\n        return (1 + 1/100 * Math.pow(Math.log2(1 + this.investedFragments / 4), 2))\n    }\n\n    async sacrificeFragments (): Promise<void> {\n        if (this.player.barFragments.amount < 1000) {\n            return void Alert('You cannot sacrifice your bar fragments until you have at least 1,000 of them.');\n        } else if (this.player.barFragments.amount <= this.investedFragments) {\n            return void Alert(\n                `This bar needs more fragments than you can invest. You need ${format(this.investedFragments)}.`\n            );\n        } else {\n            const confirmation = await Confirm(\n                `You will sacrifice ${format(this.player.barFragments.amount - this.investedFragments)} ` +\n                'Bar Fragments to increase EXP gain for this bar. Will you? ' +\n                '(automatically performs a refresh, setting your fragments to 0)'\n            );\n\n            if (confirmation) {\n                this.investedFragments = this.player.barFragments.amount\n                this.player.refreshTime += minimumRefreshCounter;\n                void reset('Refresh', this.player);\n                this.player.barFragments.set(0);\n                this.updateHTML('Sacrifice')\n            }\n        }\n    }\n\n    updateHTML(reason: TalentHTMLType): void {\n        if (this.idHTML === undefined) return;\n\n        if (reason === 'Initialize' || reason === 'GainEXP' || reason === 'LevelUp' || reason === 'PermLevelUp') {\n            updateElementById(\n                `talent${this.idHTML}EXP`,\n                { textContent: `EXP: ${format(this.currEXP)}/${format(this.currTNL)}` }\n            )\n            const width = `${this.getBarWidth()}%`\n            updateStyleById(\n                `talent${this.idHTML}Progression`,\n                { width: width }\n            )\n\n        }\n        if (reason === 'Initialize' || reason === 'LevelUp' || reason === 'PermLevelUp') {\n            updateElementById(\n                `talent${this.idHTML}TempLevel`,\n                { textContent: `Level this run: ${format(this.level)}`}\n            )\n        }\n        if (reason === 'Initialize' || reason === 'PermLevelUp') {\n            updateElementById(\n                `talent${this.idHTML}PermLevel`,\n                { textContent: `Banked levels: ${format(this.permLevel)}`}\n            )\n        }\n        if (reason === 'Initialize' || reason === 'Time' || reason === 'LevelUp') {\n            updateElementById(\n                `talent${this.idHTML}PermGain`,\n                { textContent: `Banked on reset: +${format(this.computePermLevelGain(this.level))}`}\n            )\n        }\n        if (reason === 'Initialize' || reason === 'LevelUp' || reason === 'PermLevelUp' || reason === 'Level20') {\n            updateElementById(\n                `talent${this.idHTML}Effect`,\n                { textContent: this.displayEffect()}\n            )\n        }\n\n        if (reason === 'Initialize' || reason === 'Sacrifice') {\n            updateElementById(\n                `talent${this.idHTML}SacrificeAmount`,\n                { textContent: format(this.investedFragments)}\n            )\n            updateElementById(\n                `talent${this.idHTML}SacrificeMultiplier`,\n                { textContent: format(this.sacrificeBoost(), 3)}\n            )\n        }\n    }\n\n    public override valueOf () {\n        return {\n            level: this.level,\n            cost: this.cost,\n            investedFragments: this.investedFragments,\n            permLevel: this.permLevel,\n            currEXP: this.currEXP,\n            idHTML: this.idHTML\n        }\n    }\n\n    abstract displayEffect(): string\n    abstract calculateEXPGain(dt?: number): number\n    abstract talentEffect(): number\n}\n\nexport const talentBaseEXP = {\n    talentCriticalChance: 10,\n    talentProgressSpeed: 10,\n    talentCoinGain: 1000\n}\n\nexport class TalentCriticalChance extends Talent {\n    idHTML = 'CriticalChance'\n    constructor(level: number, cost: number,\n        investedFragments: number, permLevel: number,\n        currEXP: number, player: Player) {\n        super(level, cost, investedFragments, permLevel, currEXP, player);\n        this.updateHTML('Initialize');\n    }\n\n    calculateEXPGain(dt: number): number {\n        // Critical Hit by default adds 1 EXP\n        let expGain = 5\n        // Adjust EXP based on tick rate relative to base FPS of 24\n        expGain *= (dt * 1000 / FPS)\n        expGain *= (this.player.barLevel / 10 - 1) // Is 1 at level 20\n        expGain *= this.globalTalentEXPMultipliers();\n        return expGain\n    }\n\n    talentEffect(): number {\n        if (!isLevel20(this.player)) return 0;\n\n        return 0.0025 * (1 - Math.pow(Math.E, - this.level / 2500))\n            + 0.0025 * Math.min(250, this.level) / 250\n            + 0.0025 * (1 - Math.pow(Math.E, - this.permLevel / 4000))\n            + 0.0025 * Math.min(500, this.level) / 500\n    }\n\n    displayEffect(): string {\n        return `+${format(100 * this.talentEffect(), 3)}% chance of CRITICAL TICK`\n    }\n}\n\nexport class TalentProgressSpeed extends Talent {\n    idHTML = 'ProgressSpeed'\n    constructor(level: number, cost: number,\n        investedFragments: number, permLevel: number,\n        currEXP: number, player: Player) {\n        super(level, cost, investedFragments, permLevel, currEXP, player);\n        this.updateHTML('Initialize');\n    }\n\n    calculateEXPGain(dt: number): number {\n        // Based on PPS (progress per second)\n        let expGain = Math.log10(1 + dt)\n        expGain *= (this.player.barLevel / 10 - 1)\n        expGain *= this.globalTalentEXPMultipliers();\n        return expGain\n    }\n\n    talentEffect(): number {\n        return (1 + this.level / 25) * (1 + this.permLevel / 50)\n    }\n\n    displayEffect(): string {\n        return `Progress Speed +${format(100 * (this.talentEffect() - 1), 2)}%`\n    }\n\n\n}\n\nexport class TalentCoinGain extends Talent {\n    idHTML = 'CoinGain'\n\n    constructor(level: number, cost: number,\n        investedFragments: number, permLevel: number,\n        currEXP: number, player: Player) {\n        super(level, cost, investedFragments, permLevel, currEXP, player);\n        this.updateHTML('Initialize');\n    }\n\n    calculateEXPGain(coin: number): number {\n        // Based on coin gains\n        let expGain = 2 + Math.floor(Math.pow(coin, 2) / 100 + 4 * coin);\n        expGain *= this.globalTalentEXPMultipliers();\n        return expGain;\n    }\n\n    talentEffect(): number {\n        // Max +50% coins from the progress bar\n        return Math.min(0.4, this.level / 1000 ) +\n        Math.min(0.4, this.permLevel / 2000) +\n        0.2 * (this.level * 25 + this.permLevel) / (2500 + this.level * 25 + this.permLevel) +\n        1 * (this.level * 25 + this.permLevel) / (50000 + this.level * 25 + this.permLevel)\n    }\n\n    displayEffect(): string {\n        return `Progress bar grants +${format(100 * this.talentEffect(), 2)}% coins!`\n    }\n}", "import { getProperty } from 'dot-prop';\nimport { Player } from '../../../types/player';\nimport { talentBaseEXP, TalentCriticalChance } from '../../Upgrades/Variants/Talents';\n\nconst path = 'talents.barCriticalChance' as const;\n\nexport const transform = (data: Partial<Player>, player: Player) => {\n    const value = getProperty(data, path) ?? getProperty(player, path);\n\n    return new TalentCriticalChance(\n        value?.level ?? 0,\n        talentBaseEXP.talentCriticalChance,\n        value?.investedFragments ?? 0,\n        value?.permLevel ?? 0,\n        value?.currEXP ?? 0,\n        player\n    );\n}", "import { getProperty } from 'dot-prop';\nimport { Player } from '../../../types/player';\nimport { talentBaseEXP, TalentProgressSpeed } from '../../Upgrades/Variants/Talents';\n\nconst path = 'talents.barSpeed' as const;\n\nexport const transform = (data: Partial<Player>, player: Player) => {\n    const value = getProperty(data, path) ?? getProperty(player, path);\n\n    return new TalentProgressSpeed(\n        value?.level ?? 0,\n        talentBaseEXP.talentProgressSpeed,\n        value?.investedFragments ?? 0,\n        value?.permLevel ?? 0,\n        value?.currEXP ?? 0,\n        player\n    );\n}", "import { getProperty } from 'dot-prop';\nimport { Player } from '../../../types/player';\nimport { talentBaseEXP, TalentCoinGain } from '../../Upgrades/Variants/Talents';\n\nconst path = 'talents.coinGain' as const;\n\nexport const transform = (data: Partial<Player>, player: Player) => {\n    const value = getProperty(data, path) ?? getProperty(player, path);\n\n    return new TalentCoinGain(\n        value?.level ?? 0,\n        talentBaseEXP.talentCoinGain,\n        value?.investedFragments ?? 0,\n        value?.permLevel ?? 0,\n        value?.currEXP ?? 0,\n        player\n    );\n}", "import { resetGame } from '../Game';\nimport { reset } from '../Main/Reset/Refresh';\nimport { Player } from '../types/player';\nimport { hideStuff } from './UpdateHTML';\nimport { getElementById } from './Render';\n\nexport const generateEventHandlers = (player: Player) => {\n    getElementById('main-tab-nav').addEventListener('click', () => hideStuff('Main'));\n    getElementById('upgrade-tab-nav').addEventListener('click', () => hideStuff('Upgrades'));\n    getElementById('talent-tab-nav').addEventListener('click', () => hideStuff('Talents'))\n\n    getElementById('buy-coin-bar-speed').addEventListener(\n        'click',\n        (event) => player.coinUpgrades.barSpeed.purchaseLevels(1, event)\n    );\n    getElementById('buy-coin-bar-momentum').addEventListener(\n        'click',\n        (event) => player.coinUpgrades.barMomentum.purchaseLevels(1, event)\n    );\n    getElementById('buy-coin-bar-reverberation').addEventListener(\n        'click',\n        (event) => player.coinUpgrades.barReverberation.purchaseLevels(1, event)\n    )\n    getElementById('buy-coin-bar-vibration').addEventListener(\n        'click',\n        (event) => player.coinUpgrades.barVibration.purchaseLevels(1, event)\n    )\n    getElementById('buy-coin-bar-agitation').addEventListener(\n        'click',\n        (event) => player.coinUpgrades.barAgitation.purchaseLevels(1, event)\n    )\n    getElementById('buy-coin-bar-adoption').addEventListener(\n        'click',\n        (event) => player.coinUpgrades.barAdoption.purchaseLevels(1, event)\n    )\n    getElementById('buy-coin-bar-empowerment').addEventListener(\n        'click',\n        (event) => player.coinUpgrades.barEmpowerment.purchaseLevels(1, event)\n    )\n    getElementById('buy-coin-bar-reinforcement').addEventListener(\n        'click',\n        (event) => player.coinUpgrades.barReinforcement.purchaseLevels(1, event)\n    )\n    getElementById('buy-coin-bar-resonance').addEventListener(\n        'click',\n        (event) => player.coinUpgrades.barResonance.purchaseLevels(1, event)\n    )\n    getElementById('buy-reset').addEventListener('click', () => reset('Refresh', player));\n    getElementById('reset-game').addEventListener('click', () => void resetGame());\n\n    getElementById('talentCriticalChanceSacrifice').addEventListener(\n        'click',\n        () => void player.talents.barCriticalChance.sacrificeFragments()\n    );\n\n    getElementById('talentProgressSpeedSacrifice').addEventListener(\n        'click',\n        () => void player.talents.barSpeed.sacrificeFragments()\n    );\n\n    getElementById('talentCoinGainSacrifice').addEventListener(\n        'click',\n        () => void player.talents.coinGain.sacrificeFragments()\n    );\n}\n", "import { loadGame, player } from '../Game';\nimport { Alert } from '../HTML/Popups';\nimport { generateEventHandlers } from '../Utilities/Eventlisteners';\nimport { onRefresh } from '../Utilities/UpdateHTML';\n\n// eslint-disable-next-line @typescript-eslint/no-misused-promises\nwindow.addEventListener('load', async () => {\n    generateEventHandlers(player);\n    await loadGame();\n    onRefresh(player);\n\n    // All versions of Chrome and Firefox supported by the game have this API,\n    // but not all versions of Edge and Safari do.\n    // Along with this, on Chrome there is no popup to allow/deny permission to\n    // use persistent storage; it's arbitrarily determined. Use Firefox so you\n    // don't have to deal with stupid shit decisions a mega-corp makes on your\n    // behalf.\n    // https://stackoverflow.com/a/51735357\n    // https://dexie.org/docs/StorageManager\n    if (\n        /* eslint-disable @typescript-eslint/no-unnecessary-condition */\n        typeof navigator.storage?.persist === 'function' &&\n        typeof navigator.storage?.persisted === 'function'\n        /* eslint-enable @typescript-eslint/no-unnecessary-condition */\n    ) {\n        const persistent = await navigator.storage.persisted();\n\n        if (!persistent) {\n            const isPersistentNow = await navigator.storage.persist();\n\n            if (isPersistentNow) {\n                void Alert(\n                    'Data on this page is now persistent! If you do not know what this means, you can safely ignore it.'\n                );\n            }\n        } else {\n            console.log(`Storage is persistent! (persistent = ${persistent})`);\n        }\n    }\n});", "import { player } from '../Game';\nimport { format } from '../Utilities/Format';\nimport { updateElementById, updateStyleById } from '../Utilities/Render';\n\ndocument.addEventListener('visibilitychange', () => {\n    if (document.visibilityState === 'hidden') return;\n\n    player.coins.updateHTML();\n    player.coinUpgrades.barMomentum.updateHTML();\n    player.coinUpgrades.barSpeed.updateHTML();\n    player.coinUpgrades.barReverberation.updateHTML();\n    player.coinUpgrades.barVibration.updateHTML();\n    player.coinUpgrades.barAgitation.updateHTML();\n    player.barFragments.updateHTML();\n    player.talents.barCriticalChance.updateHTML('Initialize')\n    player.talents.barSpeed.updateHTML('Initialize')\n\n    updateElementById(\n        'coinWorth',\n        { textContent: `Worth ${format(player.coinValueCache)} coins` }\n    );\n\n    if (player.coinValueCache > 0) {\n        updateStyleById(\n            'coinWorth',\n            { color: 'gold' }\n        )\n    } else {\n        updateStyleById(\n            'coinWorth',\n            { color: 'grey' }\n        )\n    }\n});"],
  "mappings": "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",
  "names": []
}
